#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Science_G.K
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="raffaydb")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertAnimalsDBo(AnimalsDBo instance);
    partial void UpdateAnimalsDBo(AnimalsDBo instance);
    partial void DeleteAnimalsDBo(AnimalsDBo instance);
    partial void InsertPlanetDBo(PlanetDBo instance);
    partial void UpdatePlanetDBo(PlanetDBo instance);
    partial void DeletePlanetDBo(PlanetDBo instance);
    partial void InsertPlantDBo(PlantDBo instance);
    partial void UpdatePlantDBo(PlantDBo instance);
    partial void DeletePlantDBo(PlantDBo instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Science_G.K.Properties.Settings.Default.raffaydbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<AnimalsDBo> AnimalsDBos
		{
			get
			{
				return this.GetTable<AnimalsDBo>();
			}
		}
		
		public System.Data.Linq.Table<PlanetDBo> PlanetDBos
		{
			get
			{
				return this.GetTable<PlanetDBo>();
			}
		}
		
		public System.Data.Linq.Table<PlantDBo> PlantDBos
		{
			get
			{
				return this.GetTable<PlantDBo>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _Name;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnimalsDBo")]
	public partial class AnimalsDBo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AnimalName;
		
		private string _ConversationStatus;
		
		private string _Kingdom;
		
		private string _Class;
		
		private string _A_Order;
		
		private string _Family;
		
		private string _AniImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnimalNameChanging(string value);
    partial void OnAnimalNameChanged();
    partial void OnConversationStatusChanging(string value);
    partial void OnConversationStatusChanged();
    partial void OnKingdomChanging(string value);
    partial void OnKingdomChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnA_OrderChanging(string value);
    partial void OnA_OrderChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnAniImageChanging(string value);
    partial void OnAniImageChanged();
    #endregion
		
		public AnimalsDBo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnimalName
		{
			get
			{
				return this._AnimalName;
			}
			set
			{
				if ((this._AnimalName != value))
				{
					this.OnAnimalNameChanging(value);
					this.SendPropertyChanging();
					this._AnimalName = value;
					this.SendPropertyChanged("AnimalName");
					this.OnAnimalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationStatus", DbType="NVarChar(50)")]
		public string ConversationStatus
		{
			get
			{
				return this._ConversationStatus;
			}
			set
			{
				if ((this._ConversationStatus != value))
				{
					this.OnConversationStatusChanging(value);
					this.SendPropertyChanging();
					this._ConversationStatus = value;
					this.SendPropertyChanged("ConversationStatus");
					this.OnConversationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kingdom", DbType="NVarChar(50)")]
		public string Kingdom
		{
			get
			{
				return this._Kingdom;
			}
			set
			{
				if ((this._Kingdom != value))
				{
					this.OnKingdomChanging(value);
					this.SendPropertyChanging();
					this._Kingdom = value;
					this.SendPropertyChanged("Kingdom");
					this.OnKingdomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_Order", DbType="NVarChar(50)")]
		public string A_Order
		{
			get
			{
				return this._A_Order;
			}
			set
			{
				if ((this._A_Order != value))
				{
					this.OnA_OrderChanging(value);
					this.SendPropertyChanging();
					this._A_Order = value;
					this.SendPropertyChanged("A_Order");
					this.OnA_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(50)")]
		public string Family
		{
			get
			{
				return this._Family;
			}
			set
			{
				if ((this._Family != value))
				{
					this.OnFamilyChanging(value);
					this.SendPropertyChanging();
					this._Family = value;
					this.SendPropertyChanged("Family");
					this.OnFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AniImage", DbType="NVarChar(MAX)")]
		public string AniImage
		{
			get
			{
				return this._AniImage;
			}
			set
			{
				if ((this._AniImage != value))
				{
					this.OnAniImageChanging(value);
					this.SendPropertyChanging();
					this._AniImage = value;
					this.SendPropertyChanged("AniImage");
					this.OnAniImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanetDBo")]
	public partial class PlanetDBo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PlanetName;
		
		private string _PolarRadius;
		
		private string _SurfaceArea;
		
		private string _Volume;
		
		private string _Mass;
		
		private System.Nullable<int> _NumberOfMoon;
		
		private System.Nullable<double> _DistanceFromEarth;
		
		private System.Nullable<double> _DistanceFromSun;
		
		private string _PlanetImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetNameChanging(string value);
    partial void OnPlanetNameChanged();
    partial void OnPolarRadiusChanging(string value);
    partial void OnPolarRadiusChanged();
    partial void OnSurfaceAreaChanging(string value);
    partial void OnSurfaceAreaChanged();
    partial void OnVolumeChanging(string value);
    partial void OnVolumeChanged();
    partial void OnMassChanging(string value);
    partial void OnMassChanged();
    partial void OnNumberOfMoonChanging(System.Nullable<int> value);
    partial void OnNumberOfMoonChanged();
    partial void OnDistanceFromEarthChanging(System.Nullable<double> value);
    partial void OnDistanceFromEarthChanged();
    partial void OnDistanceFromSunChanging(System.Nullable<double> value);
    partial void OnDistanceFromSunChanged();
    partial void OnPlanetImageChanging(string value);
    partial void OnPlanetImageChanged();
    #endregion
		
		public PlanetDBo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlanetName
		{
			get
			{
				return this._PlanetName;
			}
			set
			{
				if ((this._PlanetName != value))
				{
					this.OnPlanetNameChanging(value);
					this.SendPropertyChanging();
					this._PlanetName = value;
					this.SendPropertyChanged("PlanetName");
					this.OnPlanetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolarRadius", DbType="NVarChar(50)")]
		public string PolarRadius
		{
			get
			{
				return this._PolarRadius;
			}
			set
			{
				if ((this._PolarRadius != value))
				{
					this.OnPolarRadiusChanging(value);
					this.SendPropertyChanging();
					this._PolarRadius = value;
					this.SendPropertyChanged("PolarRadius");
					this.OnPolarRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurfaceArea", DbType="NVarChar(50)")]
		public string SurfaceArea
		{
			get
			{
				return this._SurfaceArea;
			}
			set
			{
				if ((this._SurfaceArea != value))
				{
					this.OnSurfaceAreaChanging(value);
					this.SendPropertyChanging();
					this._SurfaceArea = value;
					this.SendPropertyChanged("SurfaceArea");
					this.OnSurfaceAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="NVarChar(50)")]
		public string Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass", DbType="NVarChar(50)")]
		public string Mass
		{
			get
			{
				return this._Mass;
			}
			set
			{
				if ((this._Mass != value))
				{
					this.OnMassChanging(value);
					this.SendPropertyChanging();
					this._Mass = value;
					this.SendPropertyChanged("Mass");
					this.OnMassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfMoon", DbType="Int")]
		public System.Nullable<int> NumberOfMoon
		{
			get
			{
				return this._NumberOfMoon;
			}
			set
			{
				if ((this._NumberOfMoon != value))
				{
					this.OnNumberOfMoonChanging(value);
					this.SendPropertyChanging();
					this._NumberOfMoon = value;
					this.SendPropertyChanged("NumberOfMoon");
					this.OnNumberOfMoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromEarth", DbType="Float")]
		public System.Nullable<double> DistanceFromEarth
		{
			get
			{
				return this._DistanceFromEarth;
			}
			set
			{
				if ((this._DistanceFromEarth != value))
				{
					this.OnDistanceFromEarthChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromEarth = value;
					this.SendPropertyChanged("DistanceFromEarth");
					this.OnDistanceFromEarthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceFromSun", DbType="Float")]
		public System.Nullable<double> DistanceFromSun
		{
			get
			{
				return this._DistanceFromSun;
			}
			set
			{
				if ((this._DistanceFromSun != value))
				{
					this.OnDistanceFromSunChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromSun = value;
					this.SendPropertyChanged("DistanceFromSun");
					this.OnDistanceFromSunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetImage", DbType="NVarChar(MAX)")]
		public string PlanetImage
		{
			get
			{
				return this._PlanetImage;
			}
			set
			{
				if ((this._PlanetImage != value))
				{
					this.OnPlanetImageChanging(value);
					this.SendPropertyChanging();
					this._PlanetImage = value;
					this.SendPropertyChanged("PlanetImage");
					this.OnPlanetImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlantDBo")]
	public partial class PlantDBo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PlantName;
		
		private string _ConversationStatus;
		
		private string _Kingdom;
		
		private string _Class;
		
		private string _P_Order;
		
		private string _Family;
		
		private string _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlantNameChanging(string value);
    partial void OnPlantNameChanged();
    partial void OnConversationStatusChanging(string value);
    partial void OnConversationStatusChanged();
    partial void OnKingdomChanging(string value);
    partial void OnKingdomChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnP_OrderChanging(string value);
    partial void OnP_OrderChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public PlantDBo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlantName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlantName
		{
			get
			{
				return this._PlantName;
			}
			set
			{
				if ((this._PlantName != value))
				{
					this.OnPlantNameChanging(value);
					this.SendPropertyChanging();
					this._PlantName = value;
					this.SendPropertyChanged("PlantName");
					this.OnPlantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationStatus", DbType="NVarChar(50)")]
		public string ConversationStatus
		{
			get
			{
				return this._ConversationStatus;
			}
			set
			{
				if ((this._ConversationStatus != value))
				{
					this.OnConversationStatusChanging(value);
					this.SendPropertyChanging();
					this._ConversationStatus = value;
					this.SendPropertyChanged("ConversationStatus");
					this.OnConversationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kingdom", DbType="NVarChar(50)")]
		public string Kingdom
		{
			get
			{
				return this._Kingdom;
			}
			set
			{
				if ((this._Kingdom != value))
				{
					this.OnKingdomChanging(value);
					this.SendPropertyChanging();
					this._Kingdom = value;
					this.SendPropertyChanged("Kingdom");
					this.OnKingdomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_Order", DbType="NVarChar(50)")]
		public string P_Order
		{
			get
			{
				return this._P_Order;
			}
			set
			{
				if ((this._P_Order != value))
				{
					this.OnP_OrderChanging(value);
					this.SendPropertyChanging();
					this._P_Order = value;
					this.SendPropertyChanged("P_Order");
					this.OnP_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(50)")]
		public string Family
		{
			get
			{
				return this._Family;
			}
			set
			{
				if ((this._Family != value))
				{
					this.OnFamilyChanging(value);
					this.SendPropertyChanging();
					this._Family = value;
					this.SendPropertyChanged("Family");
					this.OnFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _User_Name;
		
		private string _User_password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnUser_passwordChanging(string value);
    partial void OnUser_passwordChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Name", DbType="NVarChar(50)")]
		public string User_Name
		{
			get
			{
				return this._User_Name;
			}
			set
			{
				if ((this._User_Name != value))
				{
					this.OnUser_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Name = value;
					this.SendPropertyChanged("User_Name");
					this.OnUser_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_password", DbType="NVarChar(50)")]
		public string User_password
		{
			get
			{
				return this._User_password;
			}
			set
			{
				if ((this._User_password != value))
				{
					this.OnUser_passwordChanging(value);
					this.SendPropertyChanging();
					this._User_password = value;
					this.SendPropertyChanged("User_password");
					this.OnUser_passwordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
